// <auto-generated />
using System;
using Fitness.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fitness.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fitness.Models.GeplanteUebung", b =>
                {
                    b.Property<Guid>("GeplanteUebungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AnzahlSaetze")
                        .HasColumnType("int");

                    b.Property<Guid>("TrainingsplanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UebungId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GeplanteUebungId");

                    b.HasIndex("TrainingsplanId");

                    b.HasIndex("UebungId");

                    b.ToTable("GeplanteUebungen");

                    b.HasData(
                        new
                        {
                            GeplanteUebungId = new Guid("72f4b931-447c-48fa-9521-bdc0bb7471f7"),
                            AnzahlSaetze = 3,
                            TrainingsplanId = new Guid("3cf8b422-e92d-487b-8d4e-97a3e0e711a7"),
                            UebungId = new Guid("fc52460c-790d-4f11-b5e8-d79a1657961a")
                        },
                        new
                        {
                            GeplanteUebungId = new Guid("e479563f-f3a9-439b-bac9-b662b450fb18"),
                            AnzahlSaetze = 4,
                            TrainingsplanId = new Guid("3cf8b422-e92d-487b-8d4e-97a3e0e711a7"),
                            UebungId = new Guid("850e6ccb-f0eb-41f8-8725-0238521a6cf6")
                        },
                        new
                        {
                            GeplanteUebungId = new Guid("6e26bfb3-1e32-489f-a701-731c6cc771b1"),
                            AnzahlSaetze = 3,
                            TrainingsplanId = new Guid("3cf8b422-e92d-487b-8d4e-97a3e0e711a7"),
                            UebungId = new Guid("b00f32df-fb45-4bbc-bfcf-ea4c40f565f5")
                        });
                });

            modelBuilder.Entity("Fitness.Models.Trainingsplan", b =>
                {
                    b.Property<Guid>("TrainingsplanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainingsplanId");

                    b.ToTable("Trainingsplaene");

                    b.HasData(
                        new
                        {
                            TrainingsplanId = new Guid("3cf8b422-e92d-487b-8d4e-97a3e0e711a7"),
                            Name = "Testplan"
                        });
                });

            modelBuilder.Entity("Fitness.Models.Uebung", b =>
                {
                    b.Property<Guid>("UebungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ausfuehrung")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Muskelgruppe")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UebungId");

                    b.ToTable("Uebungen");

                    b.HasData(
                        new
                        {
                            UebungId = new Guid("fc52460c-790d-4f11-b5e8-d79a1657961a"),
                            Ausfuehrung = "Muss so gemacht werden",
                            Muskelgruppe = 3,
                            Name = "ButterflyReverse"
                        },
                        new
                        {
                            UebungId = new Guid("850e6ccb-f0eb-41f8-8725-0238521a6cf6"),
                            Ausfuehrung = "Muss anders gemacht werden",
                            Muskelgruppe = 0,
                            Name = "Butterfly"
                        },
                        new
                        {
                            UebungId = new Guid("b00f32df-fb45-4bbc-bfcf-ea4c40f565f5"),
                            Ausfuehrung = "Muss wieder anders gemacht werden",
                            Muskelgruppe = 1,
                            Name = "BizepsCurl"
                        });
                });

            modelBuilder.Entity("Fitness.Models.GeplanteUebung", b =>
                {
                    b.HasOne("Fitness.Models.Trainingsplan", null)
                        .WithMany("geplanteUebungen")
                        .HasForeignKey("TrainingsplanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fitness.Models.Uebung", "Uebung")
                        .WithMany()
                        .HasForeignKey("UebungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uebung");
                });

            modelBuilder.Entity("Fitness.Models.Trainingsplan", b =>
                {
                    b.Navigation("geplanteUebungen");
                });
#pragma warning restore 612, 618
        }
    }
}
